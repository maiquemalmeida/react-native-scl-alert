// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SCLAlertTitle /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SCLAlertTitle
    title="Lorem"
    titleContainerStyle={
      Object {
        "marginTop": 10,
      }
    }
    titleStyle={
      Object {
        "fontSize": 14,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#444444",
              "fontSize": 51.42857142857143,
              "fontWeight": "300",
              "textAlign": "center",
            },
            Object {
              "fontSize": 14,
            },
          ]
        }
      >
        Lorem
      </Text>,
      "style": Array [
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "marginBottom": 32.14285714285714,
        },
        Object {
          "marginTop": 10,
        },
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "accessible": true,
        "allowFontScaling": true,
        "children": "Lorem",
        "ellipsizeMode": "tail",
        "numberOfLines": 1,
        "style": Array [
          Object {
            "color": "#444444",
            "fontSize": 51.42857142857143,
            "fontWeight": "300",
            "textAlign": "center",
          },
          Object {
            "fontSize": 14,
          },
        ],
      },
      "ref": null,
      "rendered": "Lorem",
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#444444",
                "fontSize": 51.42857142857143,
                "fontWeight": "300",
                "textAlign": "center",
              },
              Object {
                "fontSize": 14,
              },
            ]
          }
        >
          Lorem
        </Text>,
        "style": Array [
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "marginBottom": 32.14285714285714,
          },
          Object {
            "marginTop": 10,
          },
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "Lorem",
          "ellipsizeMode": "tail",
          "numberOfLines": 1,
          "style": Array [
            Object {
              "color": "#444444",
              "fontSize": 51.42857142857143,
              "fontWeight": "300",
              "textAlign": "center",
            },
            Object {
              "fontSize": 14,
            },
          ],
        },
        "ref": null,
        "rendered": "Lorem",
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
